//Buy and hold method (buy at day 1 closing price, sell on day 7 closing price).
profitlist = list()
for (i in 1:testset/7) {
    profit <- test$exchangerate[i+6] - test$exchangerate[i]
    name <- paste('item:',i,sep='')
    tmp <- list(profits=profit)
    profitlist[[name]] <- tmp
}

//Print profit list.
profitlist



//Testing the result output of neural network
temp_test <- subset(test, select = c("lag1", "lag2", "lag3", "lag4", "lag5"))
head(temp_test)
nn.results <- compute(nn, temp_test)

//Creating a table with predictions of neural network and actual rates
results <- data.frame(actual = test$DEXJPUS, prediction = nn.results$net.result)
results


//Confusion matrix for accuracy (calculation of percent accuracy of network)
roundedresults<-sapply(results,round,digits=0)                                       <- rounding customizable
roundedresultsdf=data.frame(roundedresults)
attach(roundedresultsdf)
table(actual,prediction)


//Further actions required includes: incorporating transaction fees. Extracting "profits" from profitlist and finalizing 
//percent profit for the buy and hold method (as a control strategy). Utilizing a for-loop to calculate actual profitability
//for the neural network results to finalize percent profit for the neural network trading strategies.
